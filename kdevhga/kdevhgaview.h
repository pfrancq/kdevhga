/*

	R Project Library

	kdevhgaview.h

	Description - Header.

	(C) 2001 by Pascal Francq

	Version $Revision$

	Last Modify: $Date$

	This library is free software; you can redistribute it and/or
	modify it under the terms of the GNU Library General Public
	License as published by the Free Software Foundation; either
	version 2.0 of the License, or (at your option) any later version.

	This library is distributed in the hope that it will be useful,
	but WITHOUT ANY WARRANTY; without even the implied warranty of
	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
	Library General Public License for more details.

	You should have received a copy of the GNU Library General Public
	License along with this library, as a file COPYING.LIB; if not, write
	to the Free Software Foundation, Inc., 59 Temple Place, Suite 330,
	Boston, MA  02111-1307  USA

*/


#ifndef KDEVHGAVIEW_H
#define KDEVHGAVIEW_H

#ifdef HAVE_CONFIG_H
#include <config.h>
#endif

// include files for Qt
#include <qwidget.h>

class KDevHGADoc;

/** The KDevHGAView class provides the view widget for the document instance connected to it and is displayed
 * as a MDI child window in the main view area of the KDevHGAApp class instance. The KDevHGAApp class also has an eventFilter()
 * method that gets installed on every KDevHGAView instance to control events of the type QEvent::Close.	
 * The document connected to the view instance keeps a list of all view that represent the document contents as there
 * can be more than one view. Views get created in KDevHGAApp::createClient() and automatically added to the list of views.
 * The KDevHGAView class inherits QWidget as a base. Another possible inheritance besides specialized widgets could be
 * QMainWindow so that you can easily set up the main area of your view by setting another view
 * as main widget (QMainWindow::setMainWidget() ).
 * NOTE: The close event always has to be empty (DON`T CALL QWidget::closeEvent(e) in closeEvent()) because the installed
 * event filter can only manage a forward implementation. If the QCloseEvent is received by the KDevHGAView, the overwritten
 * event handler has to do nothing as the eventFilter has set accept() or ignore() already. If QWidget::closeEvent() is called
 * again, the default event handler will accept the close event and the window gets destroyed even if the installed eventFilter
 * has set the event to be ignored.	
 * @author Source Framework Automatically Generated by KDevelop, (c) The KDevelop Team.
 * @version KDevelop version 1.3 code generation
 */
class KDevHGAView : public QWidget
{
  Q_OBJECT

  friend KDevHGADoc;

  public:
    /** Constructor for the view
    	* @param pDoc  your document instance that the view represents. Create a document before calling the constructor
    	* or connect an already existing document to a new MDI child widget.*/
    KDevHGAView(KDevHGADoc* pDoc, QWidget* parent, const char *name, int wflags);
    /** Destructor for the main view */
    ~KDevHGAView();
		/** returns a pointer to the document connected to the view*/
    KDevHGADoc *getDocument() const;
    /** gets called to redraw the document contents if it has been modified */
		void update(KDevHGAView* pSender);
    /** contains the implementation for printing functionality and gets called by KDevHGAApp::slotFilePrint() */
    void print(QPrinter *pPrinter);
		
  protected:
    /** overwritten QWidget::closeEvent() to catch closing views. Does nothing, as the closeEvents for
    * KDevHGAView's are processed by KDevHGAApp::eventFilter(), so this overwitten closeEvent is necessary
    * and has to be empty. Don't overwrite this method !
    */
    virtual void closeEvent(QCloseEvent* e);
	  /** The document connected to the view, specified in the constructor */
	  KDevHGADoc *doc;
};

#endif // KDEVHGAVIEW_H
